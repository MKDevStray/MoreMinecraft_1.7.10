// Date: 2/2/2015 10:21:37 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package me.straysify.moreitems.mob;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class Crab extends ModelBase
{
  //fields
    ModelRenderer lowerbody;
    ModelRenderer leg1;
    ModelRenderer upperbody;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg4;
    ModelRenderer leg5;
    ModelRenderer leg6;
    ModelRenderer leg7;
    ModelRenderer leg8;
    ModelRenderer rightarm1;
    ModelRenderer rightarm2;
    ModelRenderer righthand1;
    ModelRenderer rightpincher;
    ModelRenderer leftarm1;
    ModelRenderer leftarm2;
    ModelRenderer lefthand1;
    ModelRenderer leftpincher;
  
  public Crab()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      lowerbody = new ModelRenderer(this, 0, 0);
      lowerbody.addBox(0F, 0F, 0F, 10, 3, 12);
      lowerbody.setRotationPoint(-5F, 18F, -6F);
      lowerbody.setTextureSize(128, 64);
      lowerbody.mirror = true;
      setRotation(lowerbody, 0F, 0F, 0F);
      leg1 = new ModelRenderer(this, 1, 16);
      leg1.addBox(0F, 0F, 0F, 1, 6, 1);
      leg1.setRotationPoint(4F, 20F, -5F);
      leg1.setTextureSize(128, 64);
      leg1.mirror = true;
      setRotation(leg1, -0.1745329F, 0F, -0.8028515F);
      upperbody = new ModelRenderer(this, 74, 0);
      upperbody.addBox(0F, 0F, 0F, 8, 1, 10);
      upperbody.setRotationPoint(-4F, 17F, -5F);
      upperbody.setTextureSize(128, 64);
      upperbody.mirror = true;
      setRotation(upperbody, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 6, 16);
      leg2.addBox(0F, 0F, 0F, 1, 6, 1);
      leg2.setRotationPoint(4F, 20F, -2F);
      leg2.setTextureSize(128, 64);
      leg2.mirror = true;
      setRotation(leg2, -0.0872665F, 0F, -0.8028515F);
      leg3 = new ModelRenderer(this, 11, 16);
      leg3.addBox(0F, 0F, 0F, 1, 6, 1);
      leg3.setRotationPoint(4F, 20F, 1F);
      leg3.setTextureSize(128, 64);
      leg3.mirror = true;
      setRotation(leg3, 0.0872665F, 0F, -0.8028515F);
      leg4 = new ModelRenderer(this, 17, 16);
      leg4.addBox(0F, 0F, 0F, 1, 6, 1);
      leg4.setRotationPoint(4F, 20F, 4F);
      leg4.setTextureSize(128, 64);
      leg4.mirror = true;
      setRotation(leg4, 0.1745329F, 0F, -0.8028515F);
      leg5 = new ModelRenderer(this, 22, 16);
      leg5.addBox(0F, 0F, 0F, 1, 6, 1);
      leg5.setRotationPoint(-5F, 19F, -5F);
      leg5.setTextureSize(128, 64);
      leg5.mirror = true;
      setRotation(leg5, -0.1745329F, 0F, 0.8028515F);
      leg6 = new ModelRenderer(this, 27, 16);
      leg6.addBox(0F, 0F, 0F, 1, 6, 1);
      leg6.setRotationPoint(-5F, 19F, -2F);
      leg6.setTextureSize(128, 64);
      leg6.mirror = true;
      setRotation(leg6, -0.0872665F, 0F, 0.8028515F);
      leg7 = new ModelRenderer(this, 32, 16);
      leg7.addBox(0F, 0F, 0F, 1, 6, 1);
      leg7.setRotationPoint(-5F, 19F, 1F);
      leg7.setTextureSize(128, 64);
      leg7.mirror = true;
      setRotation(leg7, 0.0872665F, 0F, 0.8028515F);
      leg8 = new ModelRenderer(this, 38, 16);
      leg8.addBox(0F, 0F, 0F, 1, 6, 1);
      leg8.setRotationPoint(-5F, 19F, 4F);
      leg8.setTextureSize(128, 64);
      leg8.mirror = true;
      setRotation(leg8, 0.1745329F, 0F, 0.8028515F);
      rightarm1 = new ModelRenderer(this, 47, 0);
      rightarm1.addBox(0F, 0F, 0F, 4, 1, 1);
      rightarm1.setRotationPoint(-9F, 18F, 1F);
      rightarm1.setTextureSize(128, 64);
      rightarm1.mirror = true;
      setRotation(rightarm1, 0F, 0F, 0F);
      rightarm2 = new ModelRenderer(this, 47, 16);
      rightarm2.addBox(0F, 0F, 0F, 1, 1, 6);
      rightarm2.setRotationPoint(-9F, 18F, 1F);
      rightarm2.setTextureSize(128, 64);
      rightarm2.mirror = true;
      setRotation(rightarm2, 0F, 0F, 0F);
      righthand1 = new ModelRenderer(this, 64, 15);
      righthand1.addBox(0F, 0F, 0F, 2, 2, 4);
      righthand1.setRotationPoint(-9F, 18F, 7F);
      righthand1.setTextureSize(128, 64);
      righthand1.mirror = true;
      setRotation(righthand1, 0F, 0F, 0F);
      rightpincher = new ModelRenderer(this, 48, 4);
      rightpincher.addBox(0F, 0F, 0F, 1, 1, 4);
      rightpincher.setRotationPoint(-8F, 18F, 8F);
      rightpincher.setTextureSize(128, 64);
      rightpincher.mirror = true;
      setRotation(rightpincher, 0F, 0.6981317F, 0F);
      leftarm1 = new ModelRenderer(this, 60, 0);
      leftarm1.addBox(0F, 0F, 0F, 4, 1, 1);
      leftarm1.setRotationPoint(5F, 18F, 1F);
      leftarm1.setTextureSize(128, 64);
      leftarm1.mirror = true;
      setRotation(leftarm1, 0F, 0F, 0F);
      leftarm2 = new ModelRenderer(this, 47, 25);
      leftarm2.addBox(0F, 0F, 0F, 1, 1, 6);
      leftarm2.setRotationPoint(8F, 18F, 1F);
      leftarm2.setTextureSize(128, 64);
      leftarm2.mirror = true;
      setRotation(leftarm2, 0F, 0F, 0F);
      lefthand1 = new ModelRenderer(this, 78, 15);
      lefthand1.addBox(0F, 0F, 0F, 2, 2, 4);
      lefthand1.setRotationPoint(7F, 18F, 7F);
      lefthand1.setTextureSize(128, 64);
      lefthand1.mirror = true;
      setRotation(lefthand1, 0F, 0F, 0F);
      leftpincher = new ModelRenderer(this, 60, 4);
      leftpincher.addBox(0F, 0F, 0F, 1, 1, 4);
      leftpincher.setRotationPoint(7F, 18F, 7F);
      leftpincher.setTextureSize(128, 64);
      leftpincher.mirror = true;
      setRotation(leftpincher, 0F, -0.7330383F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    lowerbody.render(f5);
    leg1.render(f5);
    upperbody.render(f5);
    leg2.render(f5);
    leg3.render(f5);
    leg4.render(f5);
    leg5.render(f5);
    leg6.render(f5);
    leg7.render(f5);
    leg8.render(f5);
    rightarm1.render(f5);
    rightarm2.render(f5);
    righthand1.render(f5);
    rightpincher.render(f5);
    leftarm1.render(f5);
    leftarm2.render(f5);
    lefthand1.render(f5);
    leftpincher.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leg2.rotateAngleX = MathHelper.cos(f * 0.442F + (float)Math.PI) * 1.4F * f1;
    this.leg3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leg4.rotateAngleX = MathHelper.cos(f * 0.442F + (float)Math.PI) * 1.4F * f1;
    this.leg5.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leg6.rotateAngleX = MathHelper.cos(f * 0.442F + (float)Math.PI) * 1.4F * f1;
    this.leg7.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leg8.rotateAngleX = MathHelper.cos(f * 0.442F + (float)Math.PI) * 1.4F * f1;
  }

}
